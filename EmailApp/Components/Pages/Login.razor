@page "/login-normal"
@using System
@using MailAppMAUI.Controladores
@using MailAppMAUI.Core
@using MailAppMAUI.UseCases
@using MailAppMAUI.UseCases.Services
@using MailAppMAUI.Repositorios
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using Microsoft.AspNetCore.Components.Forms
@using MailAppMAUI.Models
@implements IDisposable
@inject GesLogin _gesLogin
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<div class="login-wrapper">
    <h1 class="login-title">¡Bienvenido!</h1>
    <div class="login-container">

        <EditForm Model="@user">
            <div class="form-group mb-3">
                <input type="text" class="form-control" placeholder="Correo" @bind-value="user.Username">
            </div>

            <div class="form-group mb-4">
                <input type="password" class="form-control" placeholder="Contraseña" @bind-value="user.Password">
            </div>

            <div class="d-grid gap-2">
                <button type="button" class="login" @onclick="OnEntrarClick">Entrar</button>
                <button type="button" class="signin" @onclick="OnRegisterClick">Registrarse</button>
            </div>
        </EditForm>
    </div>
</div>
@code {
    private UserModel user = new UserModel();

    private RegistroVM registroVM;

    private bool _navigated = false;

    bool isRegistered;

    protected override void OnInitialized()
    {
        registroVM = new(_gesLogin);
        isRegistered = false;
        //GesLogin.OnLogged+=
    }


    public void Dispose()
    {

    }

    public class RegistroVM : VModelBase
    {
        public RegistroVM(IAction gesLogin) : base(gesLogin)
        {

        }

        public class UserVM
        {
            public string Email { get; set; }
            public int UsuarioId { get; set; }
            public string Nombre { get; set; } = string.Empty;
            public string Password { get; set; }

            /// <summary>
            /// Conversor explicito de RespuestaCore a RespuestaVM
            /// </summary>
            /// <param name="respuesta">respuesta a convertir</param>
            public static explicit operator UserVM(Usuario user)
            {
                return new UserVM
                    {
                        UsuarioId = user.UsuarioId,
                        Email = user.Email,
                        Nombre = user.Nombre ?? string.Empty,
                        Password = user.Password
                    };
            }
        }
    }


    private async Task OnEntrarClick()
    {
        // Lógica para el login
        try
        {
            var result = registroVM.Action("Usuario_Entrar", user.Username, user.Password);
        }
        catch(Exception ex)
        {

        }
        Navigation.NavigateTo("/entrada");
    }

    private async Task OnRegisterClick()
    {
        Navigation.NavigateTo("/registrarse");
    }
}
