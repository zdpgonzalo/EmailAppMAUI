// <auto-generated />
using System;
using MailAppMAUI.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmailAppGonzalo.Dominio.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Adjunto", b =>
                {
                    b.Property<int>("AdjuntoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdjuntoId"));

                    b.Property<int?>("CorreoId")
                        .HasColumnType("int");

                    b.Property<int?>("EliminadoId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RespuestaId")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdjuntoId");

                    b.HasIndex("CorreoId");

                    b.HasIndex("EliminadoId");

                    b.HasIndex("RespuestaId");

                    b.ToTable("Adjuntos");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContactoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ContactoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Conversacion", b =>
                {
                    b.Property<int>("ConversacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ConversacionId"));

                    b.HasKey("ConversacionId");

                    b.ToTable("Conversacion");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Correo", b =>
                {
                    b.Property<int>("CorreoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CorreoId"));

                    b.Property<string>("Asunto")
                        .HasColumnType("longtext");

                    b.Property<int?>("ConversacionId")
                        .HasColumnType("int");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("longtext");

                    b.Property<string>("CuerpoHTML")
                        .HasColumnType("longtext");

                    b.Property<bool>("Destacado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaRecibido")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Leido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MensajeId")
                        .HasColumnType("longtext");

                    b.Property<string>("Remitente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RespuestaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CorreoId");

                    b.HasIndex("ConversacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Correos");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Eliminado", b =>
                {
                    b.Property<int>("EliminadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EliminadoId"));

                    b.Property<string>("Asunto")
                        .HasColumnType("longtext");

                    b.Property<bool>("Borrador")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("longtext");

                    b.Property<string>("CuerpoCorreoHTML")
                        .HasColumnType("longtext");

                    b.Property<string>("CuerpoRespuestaHTML")
                        .HasColumnType("longtext");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Enviado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EsCorreo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EsIA")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaEnviado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaProcesado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRecibido")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Leido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MensajeId")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreDestinatario")
                        .HasColumnType("longtext");

                    b.Property<string>("Remitente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RespuestaEliminadaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("EliminadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Eliminados");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<int>("CorreosRespondidosAutomaticos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Inteligente")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PeticionesPorDia")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool>("Traducir")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UltimoReset")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PlanId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Respuesta", b =>
                {
                    b.Property<int>("RespuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RespuestaId"));

                    b.Property<bool>("Aprobado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Asunto")
                        .HasColumnType("longtext");

                    b.Property<bool>("Borrador")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ConversacionId")
                        .HasColumnType("int");

                    b.Property<int?>("CorreoId")
                        .HasColumnType("int");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("longtext");

                    b.Property<string>("CuerpoHTML")
                        .HasColumnType("longtext");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EsEliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EsIA")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaEnviado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaProcesado")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("MensajeId")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreDestinatario")
                        .HasColumnType("longtext");

                    b.Property<string>("Remitente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RespuestaId");

                    b.HasIndex("ConversacionId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("GoogleLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PlanId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Adjunto", b =>
                {
                    b.HasOne("EmailAppGonzalo.Dominio.Core.Correo", "Correo")
                        .WithMany("Adjuntos")
                        .HasForeignKey("CorreoId");

                    b.HasOne("EmailAppGonzalo.Dominio.Core.Eliminado", null)
                        .WithMany("Adjuntos")
                        .HasForeignKey("EliminadoId");

                    b.HasOne("EmailAppGonzalo.Dominio.Core.Respuesta", "Respuesta")
                        .WithMany("Adjuntos")
                        .HasForeignKey("RespuestaId");

                    b.Navigation("Correo");

                    b.Navigation("Respuesta");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Contacto", b =>
                {
                    b.HasOne("EmailAppGonzalo.Dominio.Core.Usuario", null)
                        .WithMany("Contactos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Correo", b =>
                {
                    b.HasOne("EmailAppGonzalo.Dominio.Core.Conversacion", null)
                        .WithMany("Correos")
                        .HasForeignKey("ConversacionId");

                    b.HasOne("EmailAppGonzalo.Dominio.Core.Usuario", "Usuario")
                        .WithMany("Correos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Eliminado", b =>
                {
                    b.HasOne("EmailAppGonzalo.Dominio.Core.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Respuesta", b =>
                {
                    b.HasOne("EmailAppGonzalo.Dominio.Core.Conversacion", null)
                        .WithMany("Respuestas")
                        .HasForeignKey("ConversacionId");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Usuario", b =>
                {
                    b.HasOne("EmailAppGonzalo.Dominio.Core.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Conversacion", b =>
                {
                    b.Navigation("Correos");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Correo", b =>
                {
                    b.Navigation("Adjuntos");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Eliminado", b =>
                {
                    b.Navigation("Adjuntos");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Respuesta", b =>
                {
                    b.Navigation("Adjuntos");
                });

            modelBuilder.Entity("EmailAppGonzalo.Dominio.Core.Usuario", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Correos");
                });
#pragma warning restore 612, 618
        }
    }
}
